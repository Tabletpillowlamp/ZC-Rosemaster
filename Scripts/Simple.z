ffc script Signpost{
    void run(int m,int input){
        int loc = ComboAt(this->X,this->Y);
        while(true){
            while(!AgainstComboBase(loc) || !SelectPressInput(input)) Waitframe();
            SetInput(input,false);
            Screen->Message(m);
            Waitframe();
        }
    }
    bool AgainstComboBase(int loc){
        return Link->Z == 0 && (Link->Dir == DIR_UP && Link->Y == ComboY(loc)+8 && Abs(Link->X-ComboX(loc)) < 8);
    }
}


item script Message{
	void run(int m, int wait){
		int item_message[] = "ItemMessageFFC";
		int script_num = Game->GetFFCScript(item_message);
		int args[8] = {m, wait, 0, 0, 0, 0, 0, 0};
		RunFFCScript(script_num, args);
	}
}


ffc script ItemMessageFFC
{
	void run(int m, int wait)
	{
		Waitframes(wait);
		Screen->Message(m);
	}
}

ffc script GiveItem
{
	void run(int m)
	{
		item shpitm = CreateItemAt(m, Link->X, Link->Y);
	}
}

ffc script EnemyMusic
{
	void run(int bmidi, int nmidi)
	{
		while(true)
		{
			if (Screen->NumNPCs() != 0)
			{
				Game->PlayMIDI(bmidi);
			}
			else
			{
				Game->PlayMIDI(nmidi);
			}
			Waitframe();
		}
	}
}

ffc script MusicSecret
{
	void run(int smidi)
	{
		while(true)
		{
			if (Screen->SecretsTriggered())
			{
				Game->PlayMIDI(smidi);
			}
			Waitframe();
		}
	}
}


ffc script ButtonDisabler
{
    void run()
    {
   
        while(true){
		 	Game->SkipF6 = true;
            Link->InputStart = false; Link->PressStart = false;
            Link->InputMap = false; Link->PressMap = false;
            NoAction();
            Waitframe();
        }
    }
}

ffc script ButtonDisContinue{
    void run(){
        while(true){
            Link->InputStart = false; Link->PressStart = false;
            Link->InputMap = false; Link->PressMap = false;
            NoAction();
            Waitframe();
        }
    }
}

//Instructions:
//1. Make a new combo with inherent flag 16 (or any secret flag)
//2. Set this FFC to the above combo
//3. When secrets are triggered by blocks, this script will make it permanent
ffc script blockPermSecrets{
	void run(){
		int thisCombo = this->Data;
		while(!Screen->State[ST_SECRET]){
			if(this->Data != thisCombo) Screen->State[ST_SECRET] = true;
			Waitframe();
		}
	}
}

//import "std.zh"

//VERSION A BY DEMONLINK:

const int COMPASS_BEEP = 77; //Set this to the SFX id you want to hear when you have the compass,

//Instructions:
//1.- Compile and add this to your ZQuest buffer.
//2.- Add an FFC with this script attached to the screen where you want to hear the compass beep. 
//3.- Let the script do the rest.

//How does it work:
//The script checks if ANY of the following has been done:
//a) Item or Special Item has been picked up.
//b) Any type of chest has been opened.
//c) If NOTHING of the above has been done, the script runs. Otherwise, no SFX is heard. 

ffc script CompassBeep{
     void run(){
          if(!Screen->State[ST_ITEM] &&
             !Screen->State[ST_CHEST] &&
             !Screen->State[ST_LOCKEDCHEST] &&
             !Screen->State[ST_BOSSCHEST] &&
             !Screen->State[ST_SPECIALITEM] && (Game->LItems[Game->GetCurLevel()] & LI_COMPASS)){ 
               Game->PlaySound(COMPASS_BEEP);
          }
     }
}

ffc script SpinAttackCheck{
	void run(int sfx){
		if ( Screen->State[ST_SECRET] )
			Quit();
		bool spin;
		while(true){
			if ( Link->Action == LA_SPINNING )
				spin = true;
			if ( !Link->Action == LA_SPINNING && spin ) {
				if ( sfx == 0 )
					Game->PlaySound(27);
				if ( sfx > 0 )
					Game->PlaySound(sfx);
				Screen->TriggerSecrets();
				Screen->State[ST_SECRET] = true;
				Quit();
			}
			Waitframe();
		}
	}
}

ffc script ResetCounter
{
    void run()
    {
        Game->MCounter[CR_BOMBS] = 0;
        Game->MCounter[CR_ARROWS] = 0;
		Game->MCounter[CR_SCRIPT1] = 0;
    }
}

ffc script EnemySpawner
{
    void run(int enemyID, int interval, int maxEnemies)
    {
        npc enemy;
        
        if(interval <= 0) // Just in case
        {
            interval = 1;
        }
        
        while(true)
        {
            Waitframes(interval);
            
            if(Screen->NumNPCs() < maxEnemies)
            {
				Game->PlaySound(56);
                enemy = Screen->CreateNPC(enemyID);
                if(enemy->isValid())
                {
                    enemy->X = this->X;
                    enemy->Y = this->Y;
                }
            }
        }
    }
}

ffc script ConnectingLine
{
    void run()
    {
        while(true)
        {
            // The line will flash because a random color is selected each frame
            Screen->Line(0, this->X + 8, this->Y + 8, Link->X + 8, Link->Y + 8, Rand(16), 1, 0, 0, 0, 128);
            Waitframe();
        }
    }
}

ffc script DirectionSwitch
{
    void run()
    {
	    while(true)
	    {
		    if(Link->InputLeft)
		    {
			    Link->InputRight = true;
				Link->InputLeft = false;
		    }
		    else if(Link->InputRight)
		    {
			    Link->InputLeft = true;
			    Link->InputRight = false;
		    }
		   else if(Link->InputUp)
		    {
			    Link->InputDown = true;
			    Link->InputUp = false;
		    }
		   else if(Link->InputDown)
		    {
			    Link->InputUp = true;
			    Link->InputDown = false;
		    }	
		    Waitframe();
	    }
    }
}

item script CrossFlames{

void run(int flamesprite, int speed, int damage, int soundeffect){

Link->Action = LA_ATTACKING;
        //The first flame.
lweapon fireone = NextToLink(LW_FIRE,0);
Game -> PlaySound (soundeffect);
fireone->Dir = 0;
fireone->Step = speed;
fireone->UseSprite(flamesprite);
fireone->Damage = damage;

        //The second flame.
lweapon firetwo = NextToLink(LW_FIRE,0);
firetwo->Dir = 1;
firetwo->Step = speed;
firetwo->UseSprite(flamesprite);
firetwo->Damage = damage;

        //The third flame.
lweapon firethree = NextToLink(LW_FIRE,0);
firethree->Dir = 2;
firethree->Step = speed;
firethree->UseSprite(flamesprite);
firethree->Damage = damage;

        //The fourth flame.
lweapon firefour = NextToLink(LW_FIRE,0);
firefour->Dir = 3;
firefour->Step = speed;
firefour->UseSprite(flamesprite);
firefour->Damage = damage;

        //The above format for each flame can be imitated for more flames, or removed for fewer flames.
Waitframes(60);
}

}

item script Wand2{

void run(int speed){

Waitframes(16);
        //The first flame.
lweapon fireone = NextToLink(LW_FIRE,0);
Game -> PlaySound (84);
fireone->Dir = Link->Dir;
fireone->Step = speed;
fireone->UseSprite(12);
fireone->Damage = 8;

        //The second flame.
lweapon firetwo = NextToLink(LW_FIRE,0);
if(Link->Dir == 1){
	firetwo->Dir = 6;
	}
else if(Link->Dir == 3){
	firetwo->Dir = 5;
	}
else{
	firetwo->Dir = 4;
}
firetwo->Step = speed;
firetwo->UseSprite(12);
firetwo->Damage = 8;

        //The third flame.
lweapon firethree = NextToLink(LW_FIRE,0);
if(Link->Dir == 0){
	firethree->Dir = 5;
	}
else if(Link->Dir == 2){
	firethree->Dir = 6;
	}
else{
	firethree->Dir = 7;
}
firethree->Step = speed;
firethree->UseSprite(12);
firethree->Damage = 8;

        //The above format for each flame can be imitated for more flames, or removed for fewer flames.
Waitframes(32);
}

}
